###############################################################################
#
# IAR ANSI C/C++ Compiler V8.11.2.13589/W32 for ARM       13/Sep/2017  13:23:11
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\mathieu\Documents\Session
#        5\SMI\STM32F4-Discovery_FW_V1.1.0\Project\Peripheral_Examples\IO_Toggle\stm32f4xx_it.c
#    Command line =  
#        -f C:\Users\mathieu\AppData\Local\Temp\EW676.tmp
#        ("C:\Users\mathieu\Documents\Session
#        5\SMI\STM32F4-Discovery_FW_V1.1.0\Project\Peripheral_Examples\IO_Toggle\stm32f4xx_it.c"
#        -D USE_STDPERIPH_DRIVER -D STM32F4XX -lCN
#        "C:\Users\mathieu\Documents\Session
#        5\SMI\STM32F4-Discovery_FW_V1.1.0\Project\Peripheral_Examples\IO_Toggle\EWARM\IO_Toggle\List"
#        -o "C:\Users\mathieu\Documents\Session
#        5\SMI\STM32F4-Discovery_FW_V1.1.0\Project\Peripheral_Examples\IO_Toggle\EWARM\IO_Toggle\Obj"
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\mathieu\Documents\Session
#        5\SMI\STM32F4-Discovery_FW_V1.1.0\Project\Peripheral_Examples\IO_Toggle\EWARM\..\"
#        -I "C:\Users\mathieu\Documents\Session
#        5\SMI\STM32F4-Discovery_FW_V1.1.0\Project\Peripheral_Examples\IO_Toggle\EWARM\..\..\..\..\Libraries\CMSIS\Include\"
#        -I "C:\Users\mathieu\Documents\Session
#        5\SMI\STM32F4-Discovery_FW_V1.1.0\Project\Peripheral_Examples\IO_Toggle\EWARM\..\..\..\..\Libraries\CMSIS\ST\STM32F4xx\Include\"
#        -I "C:\Users\mathieu\Documents\Session
#        5\SMI\STM32F4-Discovery_FW_V1.1.0\Project\Peripheral_Examples\IO_Toggle\EWARM\..\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\"
#        -I "C:\Users\mathieu\Documents\Session
#        5\SMI\STM32F4-Discovery_FW_V1.1.0\Project\Peripheral_Examples\IO_Toggle\EWARM\..\..\..\..\Utilities\STM32F4-Discovery\"
#        -Ohz --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 8.0\arm\CMSIS\Include\")
#    Locale       =  C
#    List file    =  
#        C:\Users\mathieu\Documents\Session
#        5\SMI\STM32F4-Discovery_FW_V1.1.0\Project\Peripheral_Examples\IO_Toggle\EWARM\IO_Toggle\List\stm32f4xx_it.lst
#    Object file  =  
#        C:\Users\mathieu\Documents\Session
#        5\SMI\STM32F4-Discovery_FW_V1.1.0\Project\Peripheral_Examples\IO_Toggle\EWARM\IO_Toggle\Obj\stm32f4xx_it.o
#
###############################################################################

C:\Users\mathieu\Documents\Session 5\SMI\STM32F4-Discovery_FW_V1.1.0\Project\Peripheral_Examples\IO_Toggle\stm32f4xx_it.c
      1          /**
      2            ******************************************************************************
      3            * @file    IO_Toggle/stm32f4xx_it.c 
      4            * @author  MCD Application Team
      5            * @version V1.0.0
      6            * @date    19-September-2011
      7            * @brief   Main Interrupt Service Routines.
      8            *          This file provides template for all exceptions handler and 
      9            *          peripherals interrupt service routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     14            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     15            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     16            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     17            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     18            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     19            *
     20            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     21            ******************************************************************************
     22            */ 
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "stm32f4xx_it.h"
     26          
     27          /** @addtogroup STM32F4_Discovery_Peripheral_Examples
     28            * @{
     29            */
     30          
     31          /** @addtogroup IO_Toggle
     32            * @{
     33            */ 
     34          
     35          /* Private typedef -----------------------------------------------------------*/
     36          /* Private define ------------------------------------------------------------*/
     37          /* Private macro -------------------------------------------------------------*/
     38          /* Private variables ---------------------------------------------------------*/
     39          /* Private function prototypes -----------------------------------------------*/
     40          /* Private functions ---------------------------------------------------------*/
     41          
     42          /******************************************************************************/
     43          /*            Cortex-M4 Processor Exceptions Handlers                         */
     44          /******************************************************************************/
     45          
     46          /**
     47            * @brief   This function handles NMI exception.
     48            * @param  None
     49            * @retval None
     50            */

   \                                 In section .text, align 2, keep-with-next
     51          void NMI_Handler(void)
     52          {
     53          }
   \                     NMI_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     54          
     55          /**
     56            * @brief  This function handles Hard Fault exception.
     57            * @param  None
     58            * @retval None
     59            */

   \                                 In section .text, align 2, keep-with-next
     60          void HardFault_Handler(void)
     61          {
     62            /* Go to infinite loop when Hard Fault exception occurs */
     63            while (1)
   \                     HardFault_Handler: (+1)
   \                     ??HardFault_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??HardFault_Handler_0
     64            {
     65            }
     66          }
     67          
     68          /**
     69            * @brief  This function handles Memory Manage exception.
     70            * @param  None
     71            * @retval None
     72            */

   \                                 In section .text, align 2, keep-with-next
     73          void MemManage_Handler(void)
     74          {
     75            /* Go to infinite loop when Memory Manage exception occurs */
     76            while (1)
   \                     MemManage_Handler: (+1)
   \                     ??MemManage_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??MemManage_Handler_0
     77            {
     78            }
     79          }
     80          
     81          /**
     82            * @brief  This function handles Bus Fault exception.
     83            * @param  None
     84            * @retval None
     85            */

   \                                 In section .text, align 2, keep-with-next
     86          void BusFault_Handler(void)
     87          {
     88            /* Go to infinite loop when Bus Fault exception occurs */
     89            while (1)
   \                     BusFault_Handler: (+1)
   \                     ??BusFault_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??BusFault_Handler_0
     90            {
     91            }
     92          }
     93          
     94          /**
     95            * @brief  This function handles Usage Fault exception.
     96            * @param  None
     97            * @retval None
     98            */

   \                                 In section .text, align 2, keep-with-next
     99          void UsageFault_Handler(void)
    100          {
    101            /* Go to infinite loop when Usage Fault exception occurs */
    102            while (1)
   \                     UsageFault_Handler: (+1)
   \                     ??UsageFault_Handler_0: (+1)
   \   00000000   0xE7FE             B.N      ??UsageFault_Handler_0
    103            {
    104            }
    105          }
    106          
    107          /**
    108            * @brief  This function handles SVCall exception.
    109            * @param  None
    110            * @retval None
    111            */

   \                                 In section .text, align 2, keep-with-next
    112          void SVC_Handler(void)
    113          {
    114          }
   \                     SVC_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    115          
    116          /**
    117            * @brief  This function handles Debug Monitor exception.
    118            * @param  None
    119            * @retval None
    120            */

   \                                 In section .text, align 2, keep-with-next
    121          void DebugMon_Handler(void)
    122          {
    123          }
   \                     DebugMon_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    124          
    125          /**
    126            * @brief  This function handles PendSVC exception.
    127            * @param  None
    128            * @retval None
    129            */

   \                                 In section .text, align 2, keep-with-next
    130          void PendSV_Handler(void)
    131          {
    132          }
   \                     PendSV_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    133          
    134          /**
    135            * @brief  This function handles SysTick Handler.
    136            * @param  None
    137            * @retval None
    138            */

   \                                 In section .text, align 2, keep-with-next
    139          void SysTick_Handler(void)
    140          {
    141          }
   \                     SysTick_Handler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    142          
    143          /******************************************************************************/
    144          /*                 STM32F4xx Peripherals Interrupt Handlers                   */
    145          /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
    146          /*  available peripheral interrupt handler's name please refer to the startup */
    147          /*  file (startup_stm32f4xx.s).                                               */
    148          /******************************************************************************/
    149          
    150          /**
    151            * @brief  This function handles PPP interrupt request.
    152            * @param  None
    153            * @retval None
    154            */
    155          /*void PPP_IRQHandler(void)
    156          {
    157          }*/
    158          
    159          /**
    160            * @}
    161            */ 
    162          
    163          /**
    164            * @}
    165            */ 
    166          
    167          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   BusFault_Handler
       0   DebugMon_Handler
       0   HardFault_Handler
       0   MemManage_Handler
       0   NMI_Handler
       0   PendSV_Handler
       0   SVC_Handler
       0   SysTick_Handler
       0   UsageFault_Handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  BusFault_Handler
       2  DebugMon_Handler
       2  HardFault_Handler
       2  MemManage_Handler
       2  NMI_Handler
       2  PendSV_Handler
       2  SVC_Handler
       2  SysTick_Handler
       2  UsageFault_Handler

 
 18 bytes in section .text
 
 18 bytes of CODE memory

Errors: none
Warnings: none
